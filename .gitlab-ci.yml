stages:
  - lint_test_coverage
  - build-aws
  - build


build-backend:
  stage: build
  image: docker:stable
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG backend/
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG
  only:
    - develop

build-nginx:
  stage: build
  image: docker:stable
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG backend/
    - docker push $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_REF_SLUG
  only:
    - develop

.build-ecr:
  stage: build-aws
  image: docker:latest
  variables:
    REPOSITORY_URL: "733623710918.dkr.ecr.us-east-1.amazonaws.com/verbose-equals-true"
  services:
    - docker:dind
  script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region us-east-1)
    - echo "build and push images..."
    - docker build -t $REPOSITORY_URL/backend:$CI_COMMIT_SHORT_SHA backend/
    - docker build -t $REPOSITORY_URL/nginx:$CI_COMMIT_SHORT_SHA -f nginx/prod/Dockerfile .
    - docker push $REPOSITORY_URL/backend:$CI_COMMIT_SHORT_SHA
    - docker push $REPOSITORY_URL/nginx:$CI_COMMIT_SHORT_SHA

test:
  except:
    - build
  services:
    - postgres:latest
  image: python:3.6
  stage: lint_test_coverage
  variables:
    POSTGRES_DB: "postgres"
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
    DJANGO_SETTINGS_MODULE: "backend.settings-gitlab-ci"
  script:
    - cd backend && pip install -r requirements.txt
    - flake8
    - pytest --cov


test_unit:
  except:
    - build
  stage: lint_test_coverage
  image: node:10.14.2-jessie
  script:
    - cd frontend
    - npm install
    - npm run lint
    - npm run test:unit

test_e2e:
  except:
    - build
  image: cypress/base:10
  stage: lint_test_coverage
  script:
    - cd frontend
    - npm install
    - apt install httping
    - npm run serve &
    - while ! httping -qc1 http://localhost:8080/login ; do sleep 1 ; done
    - $(npm bin)/cypress run
