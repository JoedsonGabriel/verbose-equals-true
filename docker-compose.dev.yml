version: '3'

services:
  db:
    container_name: db_dev_vet
    image: postgres
    networks:
      - main

  backend:
    container_name: backend_dev_vet
    build: ./backend
    command: /start_dev.sh
    volumes:
      - .:/code
      - django-static:/backend/static
    ports:
      - "8000:8000"
    networks:
      - main
    depends_on:
      - db

  frontend:
    container_name: frontend_dev_vet
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app/:ro
      - '/app/node_modules'
    ports:
      - "8080:8080"
    networks:
      - main
    depends_on:
      - backend
      - db
    environment:
      - NODE_ENV=development

  nginx:
    container_name: nginx_dev_vet
    build:
      context: .
      dockerfile: nginx/dev/Dockerfile
    ports:
      - "8001:80"
    depends_on:
      - backend
    volumes:
      - ./nginx/dev/dev.conf:/etc/nginx/nginx.conf:ro
      - django-static:/usr/src/app/static
    networks:
      - main

  redis:
    image: redis:alpine
    container_name: redis_dev_vet
    networks:
      - main

  celery:
    build: ./backend
    container_name: celery_dev_vet
    command: bash -c 'celery worker --app=backend.celery_app:app --loglevel=info'
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
    networks:
      - main

  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    ports:
      - 9000:9000

volumes:
  django-static:
  portainer-data:

networks: 
  main:
    driver: bridge