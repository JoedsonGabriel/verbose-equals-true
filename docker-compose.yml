version: '3'

services:

  traefik:
    image: traefik
    container_name: traefik
    command: --api --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/prod/traefik.toml:/etc/traefik/traefik.toml
      - /var/:/var/acme.json
    ports:
      - "443:443"
      - "80:80"
      - "8070:8080"
    networks:
      - main
    labels:
      - traefik.enable=false

  db:
    container_name: db_prod_vet
    image: postgres
    networks:
      - main
    volumes:
      - pg-data:/var/lib/postgresql/data
    labels:
      - traefik.enable=false

  backend:
    container_name: backend_prod_vet
    build: ./backend
    command: /start_prod.sh
    volumes:
      - .:/code
      - django-static:/code/backend/static
    ports:
      - "8000:8000"
    networks:
      - main
    depends_on:
      - db
    labels:
      - traefik.enable=false

  vuepress:
    container_name: vuepress_prod_vet
    build:
      context: .
      dockerfile: ./vuepress/Dockerfile
    command: ["sh", "/app/start.sh"]
    networks:
      - main
    expose:
      - 8002
    ports:
      - 8002:8002
    labels:
      - traefik.enable=false

  nginx:
    container_name: nginx_prod_vet
    build:
      context: .
      dockerfile: nginx/prod/Dockerfile
    ports:
      - "90:80"
    depends_on:
      - backend
      - vuepress
    volumes:
      - ./nginx/prod/prod.conf:/etc/nginx/nginx.conf:ro
      - django-static:/usr/src/app/static
    networks:
      - main
    labels:
      - "traefik.backend=nginx"
      - "traefik.docker.network=main"
      - "traefik.frontend.rule=Host:verbose-equals-true.tk"
      - "traefik.enable=true"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.port=80"

  redis:
    image: redis:alpine
    container_name: redis_prod_vet
    networks:
      - main
    labels:
      - traefik.enable=false

  celery:
    build: ./backend
    container_name: celery_prod_vet
    command: bash -c 'celery worker --app=backend.celery_app:app --loglevel=info'
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
    networks:
      - main
    labels:
      - traefik.enable=false

  flower:
    image: mher/flower
    container_name: flower_prod_vet
    command: flower --url_prefix=flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
    networks:
      - main
    depends_on:
      - celery
      - redis
    labels:
      - traefik.enable=false

  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - main
    labels:
      - traefik.enable=false

volumes:
  django-static:
  portainer-data:
  pg-data:
  traefik-data:

networks:
  main:
    driver: bridge
